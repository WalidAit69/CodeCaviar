// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  role          UserRole  @default(USER)
  password      String?
  headadmin     Boolean?  @default(false)
  accounts      Account[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model VerificationToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model OtpVerification {
  id      String   @id @default(cuid())
  email   String
  otp     String   @unique
  expires DateTime

  @@unique([email, otp])
}

model Post {
  id          String      @id @default(cuid())
  title       String
  slug        String      @unique
  description String
  tech        String[]
  codeblock   CodeBlock[]
  image       String
  showimg     Boolean?    @default(false)

  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CodeBlock {
  id          String  @id @default(cuid())
  content     String
  language    String
  title       String?
  description String?
  Post        Post?   @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId      String?
}
